// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gui.proto

#ifndef PROTOBUF_gui_2eproto__INCLUDED
#define PROTOBUF_gui_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "gui_camera.pb.h"
#include "plugin.pb.h"
#pragma GCC system_header
#include <boost/shared_ptr.hpp>
#include <gazebo/util/system.hh>
#include "gazebo/msgs/MsgFactory.hh"
// @@protoc_insertion_point(includes)

namespace gazebo {
namespace msgs {

// Internal implementation detail -- do not call these.
void GZ_MSGS_VISIBLE protobuf_AddDesc_gui_2eproto();
void protobuf_AssignDesc_gui_2eproto();
void protobuf_ShutdownFile_gui_2eproto();

class GUI;

// ===================================================================

class GZ_MSGS_VISIBLE GUI : public ::google::protobuf::Message {
 public:
  GUI();
  virtual ~GUI();

  GUI(const GUI& from);

  inline GUI& operator=(const GUI& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GUI& default_instance();

  void Swap(GUI* other);

  // implements Message ----------------------------------------------

  GUI* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GUI& from);
  void MergeFrom(const GUI& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool fullscreen = 1;
  inline bool has_fullscreen() const;
  inline void clear_fullscreen();
  static const int kFullscreenFieldNumber = 1;
  inline bool fullscreen() const;
  inline void set_fullscreen(bool value);

  // optional .gazebo.msgs.GUICamera camera = 2;
  inline bool has_camera() const;
  inline void clear_camera();
  static const int kCameraFieldNumber = 2;
  inline const ::gazebo::msgs::GUICamera& camera() const;
  inline ::gazebo::msgs::GUICamera* mutable_camera();
  inline ::gazebo::msgs::GUICamera* release_camera();
  inline void set_allocated_camera(::gazebo::msgs::GUICamera* camera);

  // repeated .gazebo.msgs.Plugin plugin = 3;
  inline int plugin_size() const;
  inline void clear_plugin();
  static const int kPluginFieldNumber = 3;
  inline const ::gazebo::msgs::Plugin& plugin(int index) const;
  inline ::gazebo::msgs::Plugin* mutable_plugin(int index);
  inline ::gazebo::msgs::Plugin* add_plugin();
  inline const ::google::protobuf::RepeatedPtrField< ::gazebo::msgs::Plugin >&
      plugin() const;
  inline ::google::protobuf::RepeatedPtrField< ::gazebo::msgs::Plugin >*
      mutable_plugin();

  // @@protoc_insertion_point(class_scope:gazebo.msgs.GUI)
 private:
  inline void set_has_fullscreen();
  inline void clear_has_fullscreen();
  inline void set_has_camera();
  inline void clear_has_camera();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::gazebo::msgs::GUICamera* camera_;
  ::google::protobuf::RepeatedPtrField< ::gazebo::msgs::Plugin > plugin_;
  bool fullscreen_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void GZ_MSGS_VISIBLE protobuf_AddDesc_gui_2eproto();
  friend void protobuf_AssignDesc_gui_2eproto();
  friend void protobuf_ShutdownFile_gui_2eproto();

  void InitAsDefaultInstance();
  static GUI* default_instance_;
};
// ===================================================================


// ===================================================================

// GUI

// optional bool fullscreen = 1;
inline bool GUI::has_fullscreen() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GUI::set_has_fullscreen() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GUI::clear_has_fullscreen() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GUI::clear_fullscreen() {
  fullscreen_ = false;
  clear_has_fullscreen();
}
inline bool GUI::fullscreen() const {
  return fullscreen_;
}
inline void GUI::set_fullscreen(bool value) {
  set_has_fullscreen();
  fullscreen_ = value;
}

// optional .gazebo.msgs.GUICamera camera = 2;
inline bool GUI::has_camera() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GUI::set_has_camera() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GUI::clear_has_camera() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GUI::clear_camera() {
  if (camera_ != NULL) camera_->::gazebo::msgs::GUICamera::Clear();
  clear_has_camera();
}
inline const ::gazebo::msgs::GUICamera& GUI::camera() const {
  return camera_ != NULL ? *camera_ : *default_instance_->camera_;
}
inline ::gazebo::msgs::GUICamera* GUI::mutable_camera() {
  set_has_camera();
  if (camera_ == NULL) camera_ = new ::gazebo::msgs::GUICamera;
  return camera_;
}
inline ::gazebo::msgs::GUICamera* GUI::release_camera() {
  clear_has_camera();
  ::gazebo::msgs::GUICamera* temp = camera_;
  camera_ = NULL;
  return temp;
}
inline void GUI::set_allocated_camera(::gazebo::msgs::GUICamera* camera) {
  delete camera_;
  camera_ = camera;
  if (camera) {
    set_has_camera();
  } else {
    clear_has_camera();
  }
}

// repeated .gazebo.msgs.Plugin plugin = 3;
inline int GUI::plugin_size() const {
  return plugin_.size();
}
inline void GUI::clear_plugin() {
  plugin_.Clear();
}
inline const ::gazebo::msgs::Plugin& GUI::plugin(int index) const {
  return plugin_.Get(index);
}
inline ::gazebo::msgs::Plugin* GUI::mutable_plugin(int index) {
  return plugin_.Mutable(index);
}
inline ::gazebo::msgs::Plugin* GUI::add_plugin() {
  return plugin_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gazebo::msgs::Plugin >&
GUI::plugin() const {
  return plugin_;
}
inline ::google::protobuf::RepeatedPtrField< ::gazebo::msgs::Plugin >*
GUI::mutable_plugin() {
  return &plugin_;
}


typedef boost::shared_ptr<gazebo::msgs::GUI> GUIPtr;
// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace gazebo

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

typedef const boost::shared_ptr<gazebo::msgs::GUI const> ConstGUIPtr;
// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_gui_2eproto__INCLUDED
